name: Main workflow

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-application:
    name: Test application
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Specific Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.9.0
        with:
          mongodb-version: "5.0"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy config from sample
        run: cp .env.sample .env

      - name: Generate new secret
        run: npm run new-secret

      - name: Install dependencies
        run: npm install

      - name: Run all Node.js tests
        run: npm run test

  build-and-push-image:
    name: Build and publish a Docker image
    needs: test-application
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@44ea916f6c540f9302d50c2b1e5a8dc071f15cdf
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-service:
    name: Deploy application as service
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Trigger deploy webhook
        uses: wei/curl@master
        with:
          args: ${{ secrets.DEPLOY_WEBHOOK_URL }}
